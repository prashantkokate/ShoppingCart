{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst shoppingSlice = createSlice({\n  name: 'shoppingApp',\n  initialState: {\n    itemList: [],\n    totalQuantity: 0,\n    showCart: false\n  },\n  reducers: {\n    addTocart: (state, action) => {\n      const newItem = action.payload; //to chek if item already exist\n\n      const existingItem = state.itemList.find(item => item.id === newItem.id);\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.price = newItem.price;\n      } else {\n        state.itemList.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.name\n        });\n      }\n    },\n    removeFromCart: (state, action) => {},\n    setShowCart: (state, action) => {}\n  }\n});\nconst store = configureStore({\n  reducer: shoppingSlice.reducer\n});\nexport const {\n  addTocart,\n  removeFromCart,\n  setShowCart\n} = shoppingSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","shoppingSlice","name","initialState","itemList","totalQuantity","showCart","reducers","addTocart","state","action","newItem","payload","existingItem","find","item","id","quantity","price","push","totalPrice","removeFromCart","setShowCart","store","reducer","actions"],"sources":["C:/Users/Admin/ShoppingCart(final)/shoppingcart/src/shoppingSlice.js"],"sourcesContent":["import {createSlice,configureStore} from '@reduxjs/toolkit'\r\n\r\nconst shoppingSlice=createSlice({\r\n    name:'shoppingApp',\r\n    initialState:{\r\n       itemList:[],\r\n       totalQuantity:0,\r\n       showCart:false \r\n    },\r\n    reducers:{\r\n        addTocart:(state,action)=>{\r\n           const newItem=action.payload\r\n           //to chek if item already exist\r\n           const existingItem=state.itemList.find((item)=>item.id===newItem.id)\r\n           if(existingItem){\r\n            existingItem.quantity++;\r\n            existingItem.price=newItem.price\r\n           }else{\r\n            state.itemList.push({\r\n                id:newItem.id,\r\n                price:newItem.price,\r\n                quantity:1,\r\n                totalPrice:newItem.price,\r\n                name:newItem.name\r\n\r\n            })\r\n           }\r\n        },\r\n        removeFromCart:(state,action)=>{\r\n\r\n        },\r\n        setShowCart:(state,action)=>{\r\n\r\n        }\r\n    }\r\n})\r\n\r\nconst store=configureStore({\r\n    reducer:shoppingSlice.reducer\r\n})\r\nexport const {addTocart,removeFromCart,setShowCart}=shoppingSlice.actions\r\nexport default store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,cAApB,QAAyC,kBAAzC;AAEA,MAAMC,aAAa,GAACF,WAAW,CAAC;EAC5BG,IAAI,EAAC,aADuB;EAE5BC,YAAY,EAAC;IACVC,QAAQ,EAAC,EADC;IAEVC,aAAa,EAAC,CAFJ;IAGVC,QAAQ,EAAC;EAHC,CAFe;EAO5BC,QAAQ,EAAC;IACLC,SAAS,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;MACvB,MAAMC,OAAO,GAACD,MAAM,CAACE,OAArB,CADuB,CAEvB;;MACA,MAAMC,YAAY,GAACJ,KAAK,CAACL,QAAN,CAAeU,IAAf,CAAqBC,IAAD,IAAQA,IAAI,CAACC,EAAL,KAAUL,OAAO,CAACK,EAA9C,CAAnB;;MACA,IAAGH,YAAH,EAAgB;QACfA,YAAY,CAACI,QAAb;QACAJ,YAAY,CAACK,KAAb,GAAmBP,OAAO,CAACO,KAA3B;MACA,CAHD,MAGK;QACJT,KAAK,CAACL,QAAN,CAAee,IAAf,CAAoB;UAChBH,EAAE,EAACL,OAAO,CAACK,EADK;UAEhBE,KAAK,EAACP,OAAO,CAACO,KAFE;UAGhBD,QAAQ,EAAC,CAHO;UAIhBG,UAAU,EAACT,OAAO,CAACO,KAJH;UAKhBhB,IAAI,EAACS,OAAO,CAACT;QALG,CAApB;MAQA;IACH,CAlBI;IAmBLmB,cAAc,EAAC,CAACZ,KAAD,EAAOC,MAAP,KAAgB,CAE9B,CArBI;IAsBLY,WAAW,EAAC,CAACb,KAAD,EAAOC,MAAP,KAAgB,CAE3B;EAxBI;AAPmB,CAAD,CAA/B;AAmCA,MAAMa,KAAK,GAACvB,cAAc,CAAC;EACvBwB,OAAO,EAACvB,aAAa,CAACuB;AADC,CAAD,CAA1B;AAGA,OAAO,MAAM;EAAChB,SAAD;EAAWa,cAAX;EAA0BC;AAA1B,IAAuCrB,aAAa,CAACwB,OAA3D;AACP,eAAeF,KAAf"},"metadata":{},"sourceType":"module"}